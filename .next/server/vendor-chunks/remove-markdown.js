/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/remove-markdown";
exports.ids = ["vendor-chunks/remove-markdown"];
exports.modules = {

/***/ "(rsc)/./node_modules/remove-markdown/index.js":
/*!***********************************************!*\
  !*** ./node_modules/remove-markdown/index.js ***!
  \***********************************************/
/***/ ((module) => {

eval("module.exports = function(md, options) {\n  options = options || {};\n  options.listUnicodeChar = options.hasOwnProperty('listUnicodeChar') ? options.listUnicodeChar : false;\n  options.stripListLeaders = options.hasOwnProperty('stripListLeaders') ? options.stripListLeaders : true;\n  options.gfm = options.hasOwnProperty('gfm') ? options.gfm : true;\n  options.useImgAltText = options.hasOwnProperty('useImgAltText') ? options.useImgAltText : true;\n  options.abbr = options.hasOwnProperty('abbr') ? options.abbr : false;\n  options.replaceLinksWithURL = options.hasOwnProperty('replaceLinksWithURL') ? options.replaceLinksWithURL : false;\n  options.htmlTagsToSkip = options.hasOwnProperty('htmlTagsToSkip') ? options.htmlTagsToSkip : [];\n  options.throwError = options.hasOwnProperty('throwError') ? options.throwError : false;\n\n  var output = md || '';\n\n  // Remove horizontal rules (stripListHeaders conflict with this rule, which is why it has been moved to the top)\n  output = output.replace(/^(-\\s*?|\\*\\s*?|_\\s*?){3,}\\s*/gm, '');\n\n  try {\n    if (options.stripListLeaders) {\n      if (options.listUnicodeChar)\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, options.listUnicodeChar + ' $1');\n      else\n        output = output.replace(/^([\\s\\t]*)([\\*\\-\\+]|\\d+\\.)\\s+/gm, '$1');\n    }\n    if (options.gfm) {\n      output = output\n      // Header\n        .replace(/\\n={2,}/g, '\\n')\n        // Fenced codeblocks\n        .replace(/~{3}.*\\n/g, '')\n        // Strikethrough\n        .replace(/~~/g, '')\n        // Fenced codeblocks\n        .replace(/`{3}.*\\n/g, '');\n    }\n    if (options.abbr) {\n      // Remove abbreviations\n      output = output.replace(/\\*\\[.*\\]:.*\\n/, '');\n    }\n    output = output\n    // Remove HTML tags\n      .replace(/<[^>]*>/g, '')\n\n    var htmlReplaceRegex = new RegExp('<[^>]*>', 'g');\n    if (options.htmlTagsToSkip.length > 0) {\n      // Using negative lookahead. Eg. (?!sup|sub) will not match 'sup' and 'sub' tags.\n      var joinedHtmlTagsToSkip = '(?!' + options.htmlTagsToSkip.join(\"|\") + ')';\n\n      // Adding the lookahead literal with the default regex for html. Eg./<(?!sup|sub)[^>]*>/ig\n      htmlReplaceRegex = new RegExp(\n          '<' +\n          joinedHtmlTagsToSkip +\n          '[^>]*>', \n          'ig'\n      );\n    }\n\n    output = output\n      // Remove HTML tags\n      .replace(htmlReplaceRegex, '')\n      // Remove setext-style headers\n      .replace(/^[=\\-]{2,}\\s*$/g, '')\n      // Remove footnotes?\n      .replace(/\\[\\^.+?\\](\\: .*?$)?/g, '')\n      .replace(/\\s{0,2}\\[.*?\\]: .*?$/g, '')\n      // Remove images\n      .replace(/\\!\\[(.*?)\\][\\[\\(].*?[\\]\\)]/g, options.useImgAltText ? '$1' : '')\n      // Remove inline links\n      .replace(/\\[([^\\]]*?)\\][\\[\\(].*?[\\]\\)]/g, options.replaceLinksWithURL ? '$2' : '$1')\n      // Remove blockquotes\n      .replace(/^(\\n)?\\s{0,3}>\\s?/gm, '$1')\n      // .replace(/(^|\\n)\\s{0,3}>\\s?/g, '\\n\\n')\n      // Remove reference-style links?\n      .replace(/^\\s{1,2}\\[(.*?)\\]: (\\S+)( \".*?\")?\\s*$/g, '')\n      // Remove atx-style headers\n      .replace(/^(\\n)?\\s{0,}#{1,6}\\s*( (.+))? +#+$|^(\\n)?\\s{0,}#{1,6}\\s*( (.+))?$/gm, '$1$3$4$6')\n      // Remove * emphasis\n      .replace(/([\\*]+)(\\S)(.*?\\S)??\\1/g, '$2$3')\n      // Remove _ emphasis. Unlike *, _ emphasis gets rendered only if \n      //   1. Either there is a whitespace character before opening _ and after closing _.\n      //   2. Or _ is at the start/end of the string.\n      .replace(/(^|\\W)([_]+)(\\S)(.*?\\S)??\\2($|\\W)/g, '$1$3$4$5')\n      // Remove code blocks\n      .replace(/(`{3,})(.*?)\\1/gm, '$2')\n      // Remove inline code\n      .replace(/`(.+?)`/g, '$1')\n      // // Replace two or more newlines with exactly two? Not entirely sure this belongs here...\n      // .replace(/\\n{2,}/g, '\\n\\n')\n      // // Remove newlines in a paragraph\n      // .replace(/(\\S+)\\n\\s*(\\S+)/g, '$1 $2')\n      // Replace strike through\n      .replace(/~(.*?)~/g, '$1');\n  } catch(e) {\n    if (options.throwError) throw e;\n\n    console.error(\"remove-markdown encountered error: %s\", e);\n    return md;\n  }\n  return output;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcmVtb3ZlLW1hcmtkb3duL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsaURBQWlELEdBQUc7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLEdBQUc7QUFDekI7QUFDQSxvQkFBb0IsRUFBRTtBQUN0QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsRUFBRTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsR0FBRztBQUMxQjtBQUNBO0FBQ0EsbUJBQW1CLElBQUk7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixJQUFJO0FBQzdCLDRCQUE0QixJQUFJO0FBQ2hDO0FBQ0Esb0JBQW9CLElBQUk7QUFDeEI7QUFDQSx5QkFBeUIsR0FBRyxFQUFFLElBQUksMEJBQTBCLEdBQUcsRUFBRSxJQUFJO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLEdBQUc7QUFDdEI7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLEdBQUc7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2RvY3MtY2hhdC1uZXh0Ly4vbm9kZV9tb2R1bGVzL3JlbW92ZS1tYXJrZG93bi9pbmRleC5qcz8xODAyIl0sInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obWQsIG9wdGlvbnMpIHtcbiAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gIG9wdGlvbnMubGlzdFVuaWNvZGVDaGFyID0gb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgnbGlzdFVuaWNvZGVDaGFyJykgPyBvcHRpb25zLmxpc3RVbmljb2RlQ2hhciA6IGZhbHNlO1xuICBvcHRpb25zLnN0cmlwTGlzdExlYWRlcnMgPSBvcHRpb25zLmhhc093blByb3BlcnR5KCdzdHJpcExpc3RMZWFkZXJzJykgPyBvcHRpb25zLnN0cmlwTGlzdExlYWRlcnMgOiB0cnVlO1xuICBvcHRpb25zLmdmbSA9IG9wdGlvbnMuaGFzT3duUHJvcGVydHkoJ2dmbScpID8gb3B0aW9ucy5nZm0gOiB0cnVlO1xuICBvcHRpb25zLnVzZUltZ0FsdFRleHQgPSBvcHRpb25zLmhhc093blByb3BlcnR5KCd1c2VJbWdBbHRUZXh0JykgPyBvcHRpb25zLnVzZUltZ0FsdFRleHQgOiB0cnVlO1xuICBvcHRpb25zLmFiYnIgPSBvcHRpb25zLmhhc093blByb3BlcnR5KCdhYmJyJykgPyBvcHRpb25zLmFiYnIgOiBmYWxzZTtcbiAgb3B0aW9ucy5yZXBsYWNlTGlua3NXaXRoVVJMID0gb3B0aW9ucy5oYXNPd25Qcm9wZXJ0eSgncmVwbGFjZUxpbmtzV2l0aFVSTCcpID8gb3B0aW9ucy5yZXBsYWNlTGlua3NXaXRoVVJMIDogZmFsc2U7XG4gIG9wdGlvbnMuaHRtbFRhZ3NUb1NraXAgPSBvcHRpb25zLmhhc093blByb3BlcnR5KCdodG1sVGFnc1RvU2tpcCcpID8gb3B0aW9ucy5odG1sVGFnc1RvU2tpcCA6IFtdO1xuICBvcHRpb25zLnRocm93RXJyb3IgPSBvcHRpb25zLmhhc093blByb3BlcnR5KCd0aHJvd0Vycm9yJykgPyBvcHRpb25zLnRocm93RXJyb3IgOiBmYWxzZTtcblxuICB2YXIgb3V0cHV0ID0gbWQgfHwgJyc7XG5cbiAgLy8gUmVtb3ZlIGhvcml6b250YWwgcnVsZXMgKHN0cmlwTGlzdEhlYWRlcnMgY29uZmxpY3Qgd2l0aCB0aGlzIHJ1bGUsIHdoaWNoIGlzIHdoeSBpdCBoYXMgYmVlbiBtb3ZlZCB0byB0aGUgdG9wKVxuICBvdXRwdXQgPSBvdXRwdXQucmVwbGFjZSgvXigtXFxzKj98XFwqXFxzKj98X1xccyo/KXszLH1cXHMqL2dtLCAnJyk7XG5cbiAgdHJ5IHtcbiAgICBpZiAob3B0aW9ucy5zdHJpcExpc3RMZWFkZXJzKSB7XG4gICAgICBpZiAob3B0aW9ucy5saXN0VW5pY29kZUNoYXIpXG4gICAgICAgIG91dHB1dCA9IG91dHB1dC5yZXBsYWNlKC9eKFtcXHNcXHRdKikoW1xcKlxcLVxcK118XFxkK1xcLilcXHMrL2dtLCBvcHRpb25zLmxpc3RVbmljb2RlQ2hhciArICcgJDEnKTtcbiAgICAgIGVsc2VcbiAgICAgICAgb3V0cHV0ID0gb3V0cHV0LnJlcGxhY2UoL14oW1xcc1xcdF0qKShbXFwqXFwtXFwrXXxcXGQrXFwuKVxccysvZ20sICckMScpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5nZm0pIHtcbiAgICAgIG91dHB1dCA9IG91dHB1dFxuICAgICAgLy8gSGVhZGVyXG4gICAgICAgIC5yZXBsYWNlKC9cXG49ezIsfS9nLCAnXFxuJylcbiAgICAgICAgLy8gRmVuY2VkIGNvZGVibG9ja3NcbiAgICAgICAgLnJlcGxhY2UoL357M30uKlxcbi9nLCAnJylcbiAgICAgICAgLy8gU3RyaWtldGhyb3VnaFxuICAgICAgICAucmVwbGFjZSgvfn4vZywgJycpXG4gICAgICAgIC8vIEZlbmNlZCBjb2RlYmxvY2tzXG4gICAgICAgIC5yZXBsYWNlKC9gezN9LipcXG4vZywgJycpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5hYmJyKSB7XG4gICAgICAvLyBSZW1vdmUgYWJicmV2aWF0aW9uc1xuICAgICAgb3V0cHV0ID0gb3V0cHV0LnJlcGxhY2UoL1xcKlxcWy4qXFxdOi4qXFxuLywgJycpO1xuICAgIH1cbiAgICBvdXRwdXQgPSBvdXRwdXRcbiAgICAvLyBSZW1vdmUgSFRNTCB0YWdzXG4gICAgICAucmVwbGFjZSgvPFtePl0qPi9nLCAnJylcblxuICAgIHZhciBodG1sUmVwbGFjZVJlZ2V4ID0gbmV3IFJlZ0V4cCgnPFtePl0qPicsICdnJyk7XG4gICAgaWYgKG9wdGlvbnMuaHRtbFRhZ3NUb1NraXAubGVuZ3RoID4gMCkge1xuICAgICAgLy8gVXNpbmcgbmVnYXRpdmUgbG9va2FoZWFkLiBFZy4gKD8hc3VwfHN1Yikgd2lsbCBub3QgbWF0Y2ggJ3N1cCcgYW5kICdzdWInIHRhZ3MuXG4gICAgICB2YXIgam9pbmVkSHRtbFRhZ3NUb1NraXAgPSAnKD8hJyArIG9wdGlvbnMuaHRtbFRhZ3NUb1NraXAuam9pbihcInxcIikgKyAnKSc7XG5cbiAgICAgIC8vIEFkZGluZyB0aGUgbG9va2FoZWFkIGxpdGVyYWwgd2l0aCB0aGUgZGVmYXVsdCByZWdleCBmb3IgaHRtbC4gRWcuLzwoPyFzdXB8c3ViKVtePl0qPi9pZ1xuICAgICAgaHRtbFJlcGxhY2VSZWdleCA9IG5ldyBSZWdFeHAoXG4gICAgICAgICAgJzwnICtcbiAgICAgICAgICBqb2luZWRIdG1sVGFnc1RvU2tpcCArXG4gICAgICAgICAgJ1tePl0qPicsIFxuICAgICAgICAgICdpZydcbiAgICAgICk7XG4gICAgfVxuXG4gICAgb3V0cHV0ID0gb3V0cHV0XG4gICAgICAvLyBSZW1vdmUgSFRNTCB0YWdzXG4gICAgICAucmVwbGFjZShodG1sUmVwbGFjZVJlZ2V4LCAnJylcbiAgICAgIC8vIFJlbW92ZSBzZXRleHQtc3R5bGUgaGVhZGVyc1xuICAgICAgLnJlcGxhY2UoL15bPVxcLV17Mix9XFxzKiQvZywgJycpXG4gICAgICAvLyBSZW1vdmUgZm9vdG5vdGVzP1xuICAgICAgLnJlcGxhY2UoL1xcW1xcXi4rP1xcXShcXDogLio/JCk/L2csICcnKVxuICAgICAgLnJlcGxhY2UoL1xcc3swLDJ9XFxbLio/XFxdOiAuKj8kL2csICcnKVxuICAgICAgLy8gUmVtb3ZlIGltYWdlc1xuICAgICAgLnJlcGxhY2UoL1xcIVxcWyguKj8pXFxdW1xcW1xcKF0uKj9bXFxdXFwpXS9nLCBvcHRpb25zLnVzZUltZ0FsdFRleHQgPyAnJDEnIDogJycpXG4gICAgICAvLyBSZW1vdmUgaW5saW5lIGxpbmtzXG4gICAgICAucmVwbGFjZSgvXFxbKFteXFxdXSo/KVxcXVtcXFtcXChdLio/W1xcXVxcKV0vZywgb3B0aW9ucy5yZXBsYWNlTGlua3NXaXRoVVJMID8gJyQyJyA6ICckMScpXG4gICAgICAvLyBSZW1vdmUgYmxvY2txdW90ZXNcbiAgICAgIC5yZXBsYWNlKC9eKFxcbik/XFxzezAsM30+XFxzPy9nbSwgJyQxJylcbiAgICAgIC8vIC5yZXBsYWNlKC8oXnxcXG4pXFxzezAsM30+XFxzPy9nLCAnXFxuXFxuJylcbiAgICAgIC8vIFJlbW92ZSByZWZlcmVuY2Utc3R5bGUgbGlua3M/XG4gICAgICAucmVwbGFjZSgvXlxcc3sxLDJ9XFxbKC4qPylcXF06IChcXFMrKSggXCIuKj9cIik/XFxzKiQvZywgJycpXG4gICAgICAvLyBSZW1vdmUgYXR4LXN0eWxlIGhlYWRlcnNcbiAgICAgIC5yZXBsYWNlKC9eKFxcbik/XFxzezAsfSN7MSw2fVxccyooICguKykpPyArIyskfF4oXFxuKT9cXHN7MCx9I3sxLDZ9XFxzKiggKC4rKSk/JC9nbSwgJyQxJDMkNCQ2JylcbiAgICAgIC8vIFJlbW92ZSAqIGVtcGhhc2lzXG4gICAgICAucmVwbGFjZSgvKFtcXCpdKykoXFxTKSguKj9cXFMpPz9cXDEvZywgJyQyJDMnKVxuICAgICAgLy8gUmVtb3ZlIF8gZW1waGFzaXMuIFVubGlrZSAqLCBfIGVtcGhhc2lzIGdldHMgcmVuZGVyZWQgb25seSBpZiBcbiAgICAgIC8vICAgMS4gRWl0aGVyIHRoZXJlIGlzIGEgd2hpdGVzcGFjZSBjaGFyYWN0ZXIgYmVmb3JlIG9wZW5pbmcgXyBhbmQgYWZ0ZXIgY2xvc2luZyBfLlxuICAgICAgLy8gICAyLiBPciBfIGlzIGF0IHRoZSBzdGFydC9lbmQgb2YgdGhlIHN0cmluZy5cbiAgICAgIC5yZXBsYWNlKC8oXnxcXFcpKFtfXSspKFxcUykoLio/XFxTKT8/XFwyKCR8XFxXKS9nLCAnJDEkMyQ0JDUnKVxuICAgICAgLy8gUmVtb3ZlIGNvZGUgYmxvY2tzXG4gICAgICAucmVwbGFjZSgvKGB7Myx9KSguKj8pXFwxL2dtLCAnJDInKVxuICAgICAgLy8gUmVtb3ZlIGlubGluZSBjb2RlXG4gICAgICAucmVwbGFjZSgvYCguKz8pYC9nLCAnJDEnKVxuICAgICAgLy8gLy8gUmVwbGFjZSB0d28gb3IgbW9yZSBuZXdsaW5lcyB3aXRoIGV4YWN0bHkgdHdvPyBOb3QgZW50aXJlbHkgc3VyZSB0aGlzIGJlbG9uZ3MgaGVyZS4uLlxuICAgICAgLy8gLnJlcGxhY2UoL1xcbnsyLH0vZywgJ1xcblxcbicpXG4gICAgICAvLyAvLyBSZW1vdmUgbmV3bGluZXMgaW4gYSBwYXJhZ3JhcGhcbiAgICAgIC8vIC5yZXBsYWNlKC8oXFxTKylcXG5cXHMqKFxcUyspL2csICckMSAkMicpXG4gICAgICAvLyBSZXBsYWNlIHN0cmlrZSB0aHJvdWdoXG4gICAgICAucmVwbGFjZSgvfiguKj8pfi9nLCAnJDEnKTtcbiAgfSBjYXRjaChlKSB7XG4gICAgaWYgKG9wdGlvbnMudGhyb3dFcnJvcikgdGhyb3cgZTtcblxuICAgIGNvbnNvbGUuZXJyb3IoXCJyZW1vdmUtbWFya2Rvd24gZW5jb3VudGVyZWQgZXJyb3I6ICVzXCIsIGUpO1xuICAgIHJldHVybiBtZDtcbiAgfVxuICByZXR1cm4gb3V0cHV0O1xufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/remove-markdown/index.js\n");

/***/ })

};
;