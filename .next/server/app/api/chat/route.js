"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/chat/route";
exports.ids = ["app/api/chat/route"];
exports.modules = {

/***/ "better-sqlite3":
/*!*********************************!*\
  !*** external "better-sqlite3" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("better-sqlite3");

/***/ }),

/***/ "ffmpeg-static":
/*!********************************!*\
  !*** external "ffmpeg-static" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("ffmpeg-static");

/***/ }),

/***/ "jszip":
/*!************************!*\
  !*** external "jszip" ***!
  \************************/
/***/ ((module) => {

module.exports = require("jszip");

/***/ }),

/***/ "mammoth":
/*!**************************!*\
  !*** external "mammoth" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mammoth");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "onnxruntime-node":
/*!***********************************!*\
  !*** external "onnxruntime-node" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("onnxruntime-node");

/***/ }),

/***/ "pdf-parse":
/*!****************************!*\
  !*** external "pdf-parse" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("pdf-parse");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

module.exports = require("sharp");

/***/ }),

/***/ "tesseract.js":
/*!*******************************!*\
  !*** external "tesseract.js" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("tesseract.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "node:child_process":
/*!*************************************!*\
  !*** external "node:child_process" ***!
  \*************************************/
/***/ ((module) => {

module.exports = require("node:child_process");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:fs/promises":
/*!***********************************!*\
  !*** external "node:fs/promises" ***!
  \***********************************/
/***/ ((module) => {

module.exports = require("node:fs/promises");

/***/ }),

/***/ "node:os":
/*!**************************!*\
  !*** external "node:os" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:os");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "perf_hooks":
/*!*****************************!*\
  !*** external "perf_hooks" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("perf_hooks");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_komar_Desktop_docs_chat_master_docs_chat_master_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/chat/route.ts */ \"(rsc)/./app/api/chat/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/chat/route\",\n        pathname: \"/api/chat\",\n        filename: \"route\",\n        bundlePath: \"app/api/chat/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\komar\\\\Desktop\\\\docs-chat-master\\\\docs-chat-master\\\\app\\\\api\\\\chat\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Users_komar_Desktop_docs_chat_master_docs_chat_master_app_api_chat_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/chat/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZjaGF0JTJGcm91dGUmcGFnZT0lMkZhcGklMkZjaGF0JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGY2hhdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNrb21hciU1Q0Rlc2t0b3AlNUNkb2NzLWNoYXQtbWFzdGVyJTVDZG9jcy1jaGF0LW1hc3RlciU1Q2FwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9QyUzQSU1Q1VzZXJzJTVDa29tYXIlNUNEZXNrdG9wJTVDZG9jcy1jaGF0LW1hc3RlciU1Q2RvY3MtY2hhdC1tYXN0ZXImaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQ3VDO0FBQ3BIO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG9jcy1jaGF0LW5leHQvPzViNzAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxca29tYXJcXFxcRGVza3RvcFxcXFxkb2NzLWNoYXQtbWFzdGVyXFxcXGRvY3MtY2hhdC1tYXN0ZXJcXFxcYXBwXFxcXGFwaVxcXFxjaGF0XFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9jaGF0L3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvY2hhdFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvY2hhdC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXGtvbWFyXFxcXERlc2t0b3BcXFxcZG9jcy1jaGF0LW1hc3RlclxcXFxkb2NzLWNoYXQtbWFzdGVyXFxcXGFwcFxcXFxhcGlcXFxcY2hhdFxcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvY2hhdC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/_state.ts":
/*!***************************!*\
  !*** ./app/api/_state.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   chunker: () => (/* binding */ chunker),\n/* harmony export */   mediaFiles: () => (/* binding */ mediaFiles),\n/* harmony export */   sessions: () => (/* binding */ sessions),\n/* harmony export */   store: () => (/* binding */ store)\n/* harmony export */ });\n/* harmony import */ var _lib_settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/settings */ \"(rsc)/./lib/settings.ts\");\n/* harmony import */ var _lib_textChunker__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/textChunker */ \"(rsc)/./lib/textChunker.ts\");\n/* harmony import */ var _lib_vectorStore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/vectorStore */ \"(rsc)/./lib/vectorStore.ts\");\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! node:path */ \"node:path\");\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(node_path__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node:fs */ \"node:fs\");\n/* harmony import */ var node_fs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(node_fs__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst chunker = new _lib_textChunker__WEBPACK_IMPORTED_MODULE_1__.TextChunker(_lib_settings__WEBPACK_IMPORTED_MODULE_0__.settings.MAX_CHUNK_SIZE, _lib_settings__WEBPACK_IMPORTED_MODULE_0__.settings.CHUNK_OVERLAP);\nconst defaultDbPath = process.env.SQLITE_PATH || node_path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"data\", \"index.sqlite\");\ntry {\n    const dir = node_path__WEBPACK_IMPORTED_MODULE_3___default().dirname(defaultDbPath);\n    if (!node_fs__WEBPACK_IMPORTED_MODULE_4___default().existsSync(dir)) {\n        node_fs__WEBPACK_IMPORTED_MODULE_4___default().mkdirSync(dir, {\n            recursive: true\n        });\n    }\n} catch  {}\nconst store = new _lib_vectorStore__WEBPACK_IMPORTED_MODULE_2__.VectorStore(_lib_settings__WEBPACK_IMPORTED_MODULE_0__.settings.EMBEDDING_MODEL, defaultDbPath);\nconst sessions = new Map();\nconst mediaFiles = new Map(); // Store media files by ID\n// Create uploads directory if it doesn't exist\nconst uploadsDir = node_path__WEBPACK_IMPORTED_MODULE_3___default().join(process.cwd(), \"uploads\");\ntry {\n    if (!node_fs__WEBPACK_IMPORTED_MODULE_4___default().existsSync(uploadsDir)) {\n        node_fs__WEBPACK_IMPORTED_MODULE_4___default().mkdirSync(uploadsDir, {\n            recursive: true\n        });\n    }\n} catch  {}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL19zdGF0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUEwQztBQUNNO0FBQ0E7QUFDbkI7QUFDSjtBQVlsQixNQUFNSyxVQUFVLElBQUlKLHlEQUFXQSxDQUFDRCxtREFBUUEsQ0FBQ00sY0FBYyxFQUFFTixtREFBUUEsQ0FBQ08sYUFBYSxFQUFFO0FBQ3hGLE1BQU1DLGdCQUFnQkMsUUFBUUMsR0FBRyxDQUFDQyxXQUFXLElBQUlSLHFEQUFTLENBQUNNLFFBQVFJLEdBQUcsSUFBSSxRQUFRO0FBQ2xGLElBQUk7SUFDRixNQUFNQyxNQUFNWCx3REFBWSxDQUFDSztJQUN6QixJQUFJLENBQUNKLHlEQUFhLENBQUNVLE1BQU07UUFDdkJWLHdEQUFZLENBQUNVLEtBQUs7WUFBRUksV0FBVztRQUFLO0lBQ3RDO0FBQ0YsRUFBRSxPQUFNLENBQUM7QUFDRixNQUFNQyxRQUFRLElBQUlqQix5REFBV0EsQ0FBQ0YsbURBQVFBLENBQUNvQixlQUFlLEVBQUVaLGVBQWU7QUFDdkUsTUFBTWEsV0FBVyxJQUFJQyxNQUE2QjtBQUNsRCxNQUFNQyxhQUFhLElBQUlELE1BQXlCLENBQUMsMEJBQTBCO0FBRWxGLCtDQUErQztBQUMvQyxNQUFNRSxhQUFhckIscURBQVMsQ0FBQ00sUUFBUUksR0FBRyxJQUFJO0FBQzVDLElBQUk7SUFDRixJQUFJLENBQUNULHlEQUFhLENBQUNvQixhQUFhO1FBQzlCcEIsd0RBQVksQ0FBQ29CLFlBQVk7WUFBRU4sV0FBVztRQUFLO0lBQzdDO0FBQ0YsRUFBRSxPQUFNLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kb2NzLWNoYXQtbmV4dC8uL2FwcC9hcGkvX3N0YXRlLnRzPzRhYzYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc2V0dGluZ3MgfSBmcm9tIFwiQC9saWIvc2V0dGluZ3NcIjtcclxuaW1wb3J0IHsgVGV4dENodW5rZXIgfSBmcm9tIFwiQC9saWIvdGV4dENodW5rZXJcIjtcclxuaW1wb3J0IHsgVmVjdG9yU3RvcmUgfSBmcm9tIFwiQC9saWIvdmVjdG9yU3RvcmVcIjtcclxuaW1wb3J0IHBhdGggZnJvbSBcIm5vZGU6cGF0aFwiO1xyXG5pbXBvcnQgZnMgZnJvbSBcIm5vZGU6ZnNcIjtcclxuXHJcbmV4cG9ydCB0eXBlIENoYXRNZXNzYWdlID0geyByb2xlOiBcInVzZXJcIiB8IFwiYXNzaXN0YW50XCI7IGNvbnRlbnQ6IHN0cmluZyB9O1xyXG5cclxuZXhwb3J0IHR5cGUgTWVkaWFGaWxlID0ge1xyXG4gIGlkOiBzdHJpbmc7XHJcbiAgZmlsZVBhdGg6IHN0cmluZztcclxuICBtaW1lVHlwZTogc3RyaW5nO1xyXG4gIG9yaWdpbmFsTmFtZTogc3RyaW5nO1xyXG4gIHR5cGU6IFwiaW1hZ2VcIiB8IFwidmlkZW9cIiB8IFwiYXVkaW9cIjtcclxufTtcclxuXHJcbmV4cG9ydCBjb25zdCBjaHVua2VyID0gbmV3IFRleHRDaHVua2VyKHNldHRpbmdzLk1BWF9DSFVOS19TSVpFLCBzZXR0aW5ncy5DSFVOS19PVkVSTEFQKTtcclxuY29uc3QgZGVmYXVsdERiUGF0aCA9IHByb2Nlc3MuZW52LlNRTElURV9QQVRIIHx8IHBhdGguam9pbihwcm9jZXNzLmN3ZCgpLCBcImRhdGFcIiwgXCJpbmRleC5zcWxpdGVcIik7XHJcbnRyeSB7XHJcbiAgY29uc3QgZGlyID0gcGF0aC5kaXJuYW1lKGRlZmF1bHREYlBhdGgpO1xyXG4gIGlmICghZnMuZXhpc3RzU3luYyhkaXIpKSB7XHJcbiAgICBmcy5ta2RpclN5bmMoZGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcclxuICB9XHJcbn0gY2F0Y2gge31cclxuZXhwb3J0IGNvbnN0IHN0b3JlID0gbmV3IFZlY3RvclN0b3JlKHNldHRpbmdzLkVNQkVERElOR19NT0RFTCwgZGVmYXVsdERiUGF0aCk7XHJcbmV4cG9ydCBjb25zdCBzZXNzaW9ucyA9IG5ldyBNYXA8c3RyaW5nLCBDaGF0TWVzc2FnZVtdPigpO1xyXG5leHBvcnQgY29uc3QgbWVkaWFGaWxlcyA9IG5ldyBNYXA8c3RyaW5nLCBNZWRpYUZpbGU+KCk7IC8vIFN0b3JlIG1lZGlhIGZpbGVzIGJ5IElEXHJcblxyXG4vLyBDcmVhdGUgdXBsb2FkcyBkaXJlY3RvcnkgaWYgaXQgZG9lc24ndCBleGlzdFxyXG5jb25zdCB1cGxvYWRzRGlyID0gcGF0aC5qb2luKHByb2Nlc3MuY3dkKCksIFwidXBsb2Fkc1wiKTtcclxudHJ5IHtcclxuICBpZiAoIWZzLmV4aXN0c1N5bmModXBsb2Fkc0RpcikpIHtcclxuICAgIGZzLm1rZGlyU3luYyh1cGxvYWRzRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcclxuICB9XHJcbn0gY2F0Y2gge31cclxuXHJcbiJdLCJuYW1lcyI6WyJzZXR0aW5ncyIsIlRleHRDaHVua2VyIiwiVmVjdG9yU3RvcmUiLCJwYXRoIiwiZnMiLCJjaHVua2VyIiwiTUFYX0NIVU5LX1NJWkUiLCJDSFVOS19PVkVSTEFQIiwiZGVmYXVsdERiUGF0aCIsInByb2Nlc3MiLCJlbnYiLCJTUUxJVEVfUEFUSCIsImpvaW4iLCJjd2QiLCJkaXIiLCJkaXJuYW1lIiwiZXhpc3RzU3luYyIsIm1rZGlyU3luYyIsInJlY3Vyc2l2ZSIsInN0b3JlIiwiRU1CRURESU5HX01PREVMIiwic2Vzc2lvbnMiLCJNYXAiLCJtZWRpYUZpbGVzIiwidXBsb2Fkc0RpciJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./app/api/_state.ts\n");

/***/ }),

/***/ "(rsc)/./app/api/chat/route.ts":
/*!*******************************!*\
  !*** ./app/api/chat/route.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_state */ \"(rsc)/./app/api/_state.ts\");\n/* harmony import */ var _lib_gemini__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/gemini */ \"(rsc)/./lib/gemini.ts\");\n/* harmony import */ var _lib_documentProcessor__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/documentProcessor */ \"(rsc)/./lib/documentProcessor.ts\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(node_fs_promises__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\nconst runtime = \"nodejs\";\nasync function POST(req) {\n    const body = await req.json().catch(()=>({}));\n    const { session_id, query, top_k = 5 } = body;\n    if (!query || !query.trim()) return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n        detail: \"Query cannot be empty\"\n    }, {\n        status: 400\n    });\n    if (!_state__WEBPACK_IMPORTED_MODULE_1__.sessions.has(session_id)) {\n        _state__WEBPACK_IMPORTED_MODULE_1__.sessions.set(session_id, []);\n    }\n    const history = _state__WEBPACK_IMPORTED_MODULE_1__.sessions.get(session_id);\n    history.push({\n        role: \"user\",\n        content: query\n    });\n    try {\n        // Collect all media files (images/videos) for visual analysis\n        const mediaToInclude = [];\n        for (const [id, media] of _state__WEBPACK_IMPORTED_MODULE_1__.mediaFiles.entries()){\n            if (media.type === \"image\" || media.type === \"video\") {\n                mediaToInclude.push({\n                    filePath: media.filePath,\n                    mimeType: media.mimeType\n                });\n            }\n        }\n        // If we have media files, always use them with Gemini Vision\n        if (mediaToInclude.length > 0) {\n            // For videos, extract frames\n            const finalMediaFiles = [];\n            for (const media of mediaToInclude){\n                if (media.mimeType.startsWith(\"video/\")) {\n                    try {\n                        const frames = await (0,_lib_documentProcessor__WEBPACK_IMPORTED_MODULE_3__.extractVideoFrames)(media.filePath, 5);\n                        // Convert frames to base64 and add as images\n                        for (const framePath of frames){\n                            try {\n                                const frameData = await node_fs_promises__WEBPACK_IMPORTED_MODULE_4___default().readFile(framePath);\n                                const base64Data = frameData.toString(\"base64\");\n                                // Create temporary file reference for Gemini\n                                finalMediaFiles.push({\n                                    filePath: framePath,\n                                    mimeType: \"image/jpeg\"\n                                });\n                            } catch (e) {\n                                console.warn(\"Failed to read video frame:\", e);\n                            }\n                        }\n                    } catch (e) {\n                        console.warn(\"Failed to extract video frames, using video file directly:\", e);\n                        finalMediaFiles.push(media);\n                    }\n                } else {\n                    finalMediaFiles.push(media);\n                }\n            }\n            // Build prompt with context if available\n            let prompt = query;\n            const stats = _state__WEBPACK_IMPORTED_MODULE_1__.store.getStats();\n            if (stats.index_size > 0) {\n                const results = await _state__WEBPACK_IMPORTED_MODULE_1__.store.search(query, top_k);\n                if (results.length > 0) {\n                    const contexts = results.map((c, i)=>`[Context ${i + 1}]:\\n${c.chunk.text || \"\"}\\n`).join(\"\\n\");\n                    const hist = history.slice(-5).map((m)=>`${m.role === \"user\" ? \"User\" : \"Assistant\"}: ${m.content}`).join(\"\\n\");\n                    prompt = `${hist ? `CONVERSATION HISTORY:\\n${hist}\\n\\n` : \"\"}USER QUESTION: ${query}\\n\\nDOCUMENT CONTEXT:\\n${contexts}\\n\\nANSWER:`;\n                }\n            } else {\n                // No text context, but we have media - use simple prompt\n                const hist = history.slice(-5).map((m)=>`${m.role === \"user\" ? \"User\" : \"Assistant\"}: ${m.content}`).join(\"\\n\");\n                prompt = `${hist ? `CONVERSATION HISTORY:\\n${hist}\\n\\n` : \"\"}USER QUESTION: ${query}\\n\\nPlease analyze the ${finalMediaFiles.length > 1 ? `${finalMediaFiles.length} images/frames` : \"image/frame\"} provided and answer based on what you see.\\n\\nANSWER:`;\n            }\n            const answer = await (0,_lib_gemini__WEBPACK_IMPORTED_MODULE_2__.generateWithGemini)(prompt, finalMediaFiles.length > 0 ? finalMediaFiles : mediaToInclude);\n            history.push({\n                role: \"assistant\",\n                content: answer\n            });\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                session_id,\n                query,\n                response: answer,\n                relevant_chunks: [],\n                chunk_count: 0,\n                media_analyzed: mediaToInclude.length\n            });\n        }\n        // Fallback to text-only RAG if no media files\n        if (_state__WEBPACK_IMPORTED_MODULE_1__.store.getStats().index_size === 0) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                detail: \"No documents uploaded. Please upload a document first.\"\n            }, {\n                status: 400\n            });\n        }\n        const results = await _state__WEBPACK_IMPORTED_MODULE_1__.store.search(query, top_k);\n        if (!results.length) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                session_id,\n                query,\n                response: \"I couldn't find relevant information in the document to answer your question.\",\n                relevant_chunks: [],\n                chunk_count: 0\n            });\n        }\n        const prompt = (0,_lib_gemini__WEBPACK_IMPORTED_MODULE_2__.buildRagPrompt)(query, results.map((r)=>({\n                text: r.chunk.text\n            })), history);\n        const answer = await (0,_lib_gemini__WEBPACK_IMPORTED_MODULE_2__.generateWithGemini)(prompt);\n        history.push({\n            role: \"assistant\",\n            content: answer\n        });\n        const chunk_info = results.map((r)=>({\n                id: r.chunk.id,\n                text: r.chunk.text.length > 200 ? r.chunk.text.slice(0, 200) + \"...\" : r.chunk.text,\n                score: r.score\n            }));\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            session_id,\n            query,\n            response: answer,\n            relevant_chunks: chunk_info,\n            chunk_count: results.length\n        });\n    } catch (e) {\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            detail: `Error generating response: ${e.message || e}`\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/chat/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/documentProcessor.ts":
/*!**********************************!*\
  !*** ./lib/documentProcessor.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cleanText: () => (/* binding */ cleanText),\n/* harmony export */   extractTextFromPdf: () => (/* binding */ extractTextFromPdf),\n/* harmony export */   extractTextFromTxt: () => (/* binding */ extractTextFromTxt),\n/* harmony export */   extractVideoFrames: () => (/* binding */ extractVideoFrames),\n/* harmony export */   processDocument: () => (/* binding */ processDocument)\n/* harmony export */ });\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(node_fs_promises__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var pdf_parse__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! pdf-parse */ \"pdf-parse\");\n/* harmony import */ var pdf_parse__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(pdf_parse__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var mammoth__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mammoth */ \"mammoth\");\n/* harmony import */ var mammoth__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(mammoth__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var remove_markdown__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! remove-markdown */ \"(rsc)/./node_modules/remove-markdown/index.js\");\n/* harmony import */ var remove_markdown__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(remove_markdown__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! jszip */ \"jszip\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! tesseract.js */ \"tesseract.js\");\n/* harmony import */ var tesseract_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(tesseract_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./settings */ \"(rsc)/./lib/settings.ts\");\n/* harmony import */ var ffmpeg_static__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ffmpeg-static */ \"ffmpeg-static\");\n/* harmony import */ var ffmpeg_static__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(ffmpeg_static__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var node_child_process__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! node:child_process */ \"node:child_process\");\n/* harmony import */ var node_child_process__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(node_child_process__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! node:util */ \"node:util\");\n/* harmony import */ var node_util__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(node_util__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! node:os */ \"node:os\");\n/* harmony import */ var node_os__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(node_os__WEBPACK_IMPORTED_MODULE_10__);\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! node:path */ \"node:path\");\n/* harmony import */ var node_path__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(node_path__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var _xenova_transformers__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @xenova/transformers */ \"(rsc)/./node_modules/@xenova/transformers/src/transformers.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst execFile = (0,node_util__WEBPACK_IMPORTED_MODULE_9__.promisify)(node_child_process__WEBPACK_IMPORTED_MODULE_8__.execFile);\nasync function extractTextFromPdf(filePath) {\n    try {\n        const data = await node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(filePath);\n        const res = await pdf_parse__WEBPACK_IMPORTED_MODULE_1___default()(data);\n        return res.text || \"\";\n    } catch (e) {\n        throw new Error(`Error extracting text from PDF: ${e.message || e}`);\n    }\n}\nasync function extractTextFromTxt(filePath) {\n    try {\n        const content = await node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(filePath, {\n            encoding: \"utf-8\"\n        });\n        return content;\n    } catch (e) {\n        const content = await node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(filePath, {\n            encoding: \"latin1\"\n        });\n        return content;\n    }\n}\nfunction cleanText(text) {\n    return text.split(/\\s+/).join(\" \").trim();\n}\nasync function processDocument(filePath) {\n    const lower = filePath.toLowerCase();\n    let text = \"\";\n    if (lower.endsWith(\".pdf\")) {\n        text = await extractTextFromPdf(filePath);\n    } else if (lower.endsWith(\".txt\") || lower.endsWith(\".text\") || lower.endsWith(\".bxt\")) {\n        text = await extractTextFromTxt(filePath);\n    } else if (lower.endsWith(\".md\") || lower.endsWith(\".markdown\")) {\n        const raw = await extractTextFromTxt(filePath);\n        text = remove_markdown__WEBPACK_IMPORTED_MODULE_3___default()(raw);\n    } else if (lower.endsWith(\".docx\")) {\n        try {\n            const data = await node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(filePath);\n            const result = await mammoth__WEBPACK_IMPORTED_MODULE_2___default().extractRawText({\n                buffer: data\n            });\n            text = result.value || \"\";\n        } catch (e) {\n            throw new Error(`Error extracting text from DOCX: ${e.message || e}`);\n        }\n    } else if (lower.endsWith(\".pptx\")) {\n        try {\n            const data = await node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default().readFile(filePath);\n            const zip = await jszip__WEBPACK_IMPORTED_MODULE_4___default().loadAsync(data);\n            const slideFiles = Object.keys(zip.files).filter((p)=>p.startsWith(\"ppt/slides/slide\") && p.endsWith(\".xml\"));\n            const contents = await Promise.all(slideFiles.map(async (p)=>{\n                const file = zip.file(p);\n                if (!file) return \"\";\n                const xml = await file.async(\"text\");\n                return xml.replace(/<[^>]+>/g, \" \").replace(/&amp;/g, \"&\").replace(/&lt;/g, \"<\").replace(/&gt;/g, \">\").replace(/&quot;/g, '\"').replace(/&#39;/g, \"'\");\n            }));\n            text = contents.join(\"\\n\");\n        } catch (e) {\n            throw new Error(`Error extracting text from PPTX: ${e.message || e}`);\n        }\n    } else {\n        if (lower.endsWith(\".png\") || lower.endsWith(\".jpg\") || lower.endsWith(\".jpeg\")) {\n            if (!_settings__WEBPACK_IMPORTED_MODULE_6__.settings.ENABLE_OCR) {\n                throw new Error(\"OCR is disabled by settings.\");\n            }\n            try {\n                const result = await tesseract_js__WEBPACK_IMPORTED_MODULE_5___default().recognize(filePath, \"eng\");\n                text = result.data.text || \"\";\n            } catch (e) {\n                throw new Error(`Error extracting text from image: ${e.message || e}`);\n            }\n        } else if (lower.endsWith(\".mp3\") || lower.endsWith(\".mp4\") || lower.endsWith(\".wav\") || lower.endsWith(\".m4a\")) {\n            const wavPath = await ensureWavMono16k(filePath);\n            const asr = await (0,_xenova_transformers__WEBPACK_IMPORTED_MODULE_12__.pipeline)(\"automatic-speech-recognition\", \"Xenova/whisper-tiny.en\");\n            const result = await asr(wavPath, {\n                chunk_length_s: 30\n            });\n            text = result?.text || \"\";\n        } else {\n            throw new Error(`Unsupported file type: ${filePath}`);\n        }\n    }\n    return cleanText(text);\n}\nasync function ensureWavMono16k(inputPath) {\n    if (!(ffmpeg_static__WEBPACK_IMPORTED_MODULE_7___default())) throw new Error(\"ffmpeg not available\");\n    const out = node_path__WEBPACK_IMPORTED_MODULE_11___default().join(node_os__WEBPACK_IMPORTED_MODULE_10___default().tmpdir(), `${Date.now()}_audio.wav`);\n    await execFile((ffmpeg_static__WEBPACK_IMPORTED_MODULE_7___default()), [\n        \"-y\",\n        \"-i\",\n        inputPath,\n        \"-ac\",\n        \"1\",\n        \"-ar\",\n        \"16000\",\n        \"-f\",\n        \"wav\",\n        out\n    ]);\n    return out;\n}\nasync function extractVideoFrames(videoPath, maxFrames = 5) {\n    if (!(ffmpeg_static__WEBPACK_IMPORTED_MODULE_7___default())) throw new Error(\"ffmpeg not available\");\n    const framePaths = [];\n    const baseTimestamp = Date.now();\n    // Extract frames at intervals (start, middle, end)\n    // Extract frames at: 0%, 25%, 50%, 75%, 100% of video (or maxFrames evenly spaced)\n    for(let i = 0; i < maxFrames; i++){\n        const framePath = node_path__WEBPACK_IMPORTED_MODULE_11___default().join(node_os__WEBPACK_IMPORTED_MODULE_10___default().tmpdir(), `${baseTimestamp}_frame_${i}.jpg`);\n        try {\n            // Use percentage-based extraction for better coverage\n            // -ss seeks to timestamp, then extract one frame\n            // We'll extract frames at regular intervals (every 10 seconds or evenly distributed)\n            const timestamp = i * 10; // Extract every 10 seconds\n            await execFile((ffmpeg_static__WEBPACK_IMPORTED_MODULE_7___default()), [\n                \"-y\",\n                \"-ss\",\n                timestamp.toString(),\n                \"-i\",\n                videoPath,\n                \"-vframes\",\n                \"1\",\n                \"-q:v\",\n                \"2\",\n                \"-vf\",\n                \"scale=800:-1\",\n                framePath\n            ], {\n                timeout: 15000\n            });\n            // Check if frame file was created and has content\n            try {\n                const stats = await node_fs_promises__WEBPACK_IMPORTED_MODULE_0___default().stat(framePath);\n                if (stats.size > 0) {\n                    framePaths.push(framePath);\n                }\n            } catch  {\n            // Frame not created or empty, skip\n            }\n        } catch (e) {\n            console.warn(`Failed to extract frame ${i} at ${i * 10}s:`, e);\n        // Continue with next frame\n        }\n    }\n    return framePaths;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/documentProcessor.ts\n");

/***/ }),

/***/ "(rsc)/./lib/gemini.ts":
/*!***********************!*\
  !*** ./lib/gemini.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   buildRagPrompt: () => (/* binding */ buildRagPrompt),\n/* harmony export */   generateWithGemini: () => (/* binding */ generateWithGemini),\n/* harmony export */   getMimeType: () => (/* binding */ getMimeType)\n/* harmony export */ });\n/* harmony import */ var _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/generative-ai */ \"(rsc)/./node_modules/@google/generative-ai/dist/index.mjs\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings */ \"(rsc)/./lib/settings.ts\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! node:fs/promises */ \"node:fs/promises\");\n/* harmony import */ var node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(node_fs_promises__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nfunction buildRagPrompt(query, relevant, history) {\n    const contexts = relevant.map((c, i)=>`[Context ${i + 1}]:\\n${c.text || \"\"}\\n`).join(\"\\n\");\n    const hist = (history || []).slice(-5).map((m)=>`${capitalize(m.role)}: ${m.content}`).join(\"\\n\");\n    return `${_settings__WEBPACK_IMPORTED_MODULE_1__.SYSTEM_PROMPT}\r\n\r\nDOCUMENT CONTEXT:\r\n${contexts}\r\n\r\n${hist ? `CONVERSATION HISTORY:\\n${hist}\\n\\n` : \"\"}USER QUESTION:\r\n${query}\r\n\r\nANSWER:`;\n}\nasync function generateWithGemini(prompt, mediaFiles) {\n    if (!_settings__WEBPACK_IMPORTED_MODULE_1__.settings.GEMINI_API_KEY) {\n        throw new Error(\"GEMINI_API_KEY not set\");\n    }\n    const genai = new _google_generative_ai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenerativeAI(_settings__WEBPACK_IMPORTED_MODULE_1__.settings.GEMINI_API_KEY);\n    const model = genai.getGenerativeModel({\n        model: _settings__WEBPACK_IMPORTED_MODULE_1__.settings.GEMINI_MODEL\n    });\n    // Build parts array: text + media files\n    const parts = [\n        {\n            text: prompt\n        }\n    ];\n    // Add media files (images/videos) to the prompt\n    if (mediaFiles && mediaFiles.length > 0) {\n        for (const media of mediaFiles){\n            try {\n                const fileData = await node_fs_promises__WEBPACK_IMPORTED_MODULE_2___default().readFile(media.filePath);\n                const base64Data = fileData.toString(\"base64\");\n                parts.push({\n                    inline_data: {\n                        mime_type: media.mimeType,\n                        data: base64Data\n                    }\n                });\n            } catch (e) {\n                console.warn(`Failed to read media file ${media.filePath}:`, e);\n            }\n        }\n    }\n    const result = await model.generateContent({\n        contents: [\n            {\n                role: \"user\",\n                parts\n            }\n        ]\n    });\n    const text = result.response.text();\n    return text;\n}\nfunction capitalize(s) {\n    return s ? s[0].toUpperCase() + s.slice(1) : s;\n}\nfunction getMimeType(filePath) {\n    const lower = filePath.toLowerCase();\n    if (lower.endsWith(\".png\")) return \"image/png\";\n    if (lower.endsWith(\".jpg\") || lower.endsWith(\".jpeg\")) return \"image/jpeg\";\n    if (lower.endsWith(\".gif\")) return \"image/gif\";\n    if (lower.endsWith(\".webp\")) return \"image/webp\";\n    if (lower.endsWith(\".mp4\")) return \"video/mp4\";\n    if (lower.endsWith(\".webm\")) return \"video/webm\";\n    if (lower.endsWith(\".mov\")) return \"video/quicktime\";\n    return \"application/octet-stream\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZ2VtaW5pLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBMkQ7QUFDTjtBQUNuQjtBQUczQixTQUFTSSxlQUFlQyxLQUFhLEVBQUVDLFFBQTZCLEVBQUVDLE9BQTZDO0lBQ3hILE1BQU1DLFdBQVdGLFNBQVNHLEdBQUcsQ0FBQyxDQUFDQyxHQUFHQyxJQUFNLENBQUMsU0FBUyxFQUFFQSxJQUFJLEVBQUUsSUFBSSxFQUFFRCxFQUFFRSxJQUFJLElBQUksR0FBRyxFQUFFLENBQUMsRUFBRUMsSUFBSSxDQUFDO0lBQ3ZGLE1BQU1DLE9BQU8sQ0FBQ1AsV0FBVyxFQUFFLEVBQUVRLEtBQUssQ0FBQyxDQUFDLEdBQUdOLEdBQUcsQ0FBQ08sQ0FBQUEsSUFBSyxDQUFDLEVBQUVDLFdBQVdELEVBQUVFLElBQUksRUFBRSxFQUFFLEVBQUVGLEVBQUVHLE9BQU8sQ0FBQyxDQUFDLEVBQUVOLElBQUksQ0FBQztJQUM1RixPQUFPLENBQUMsRUFBRVosb0RBQWFBLENBQUM7OztBQUcxQixFQUFFTyxTQUFTOztBQUVYLEVBQUVNLE9BQU8sQ0FBQyx1QkFBdUIsRUFBRUEsS0FBSyxJQUFJLENBQUMsR0FBRyxHQUFHO0FBQ25ELEVBQUVULE1BQU07O09BRUQsQ0FBQztBQUNSO0FBRU8sZUFBZWUsbUJBQ3BCQyxNQUFjLEVBQ2RDLFVBQXFEO0lBRXJELElBQUksQ0FBQ3BCLCtDQUFRQSxDQUFDcUIsY0FBYyxFQUFFO1FBQzVCLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE1BQU1DLFFBQVEsSUFBSXpCLHFFQUFrQkEsQ0FBQ0UsK0NBQVFBLENBQUNxQixjQUFjO0lBQzVELE1BQU1HLFFBQVFELE1BQU1FLGtCQUFrQixDQUFDO1FBQUVELE9BQU94QiwrQ0FBUUEsQ0FBQzBCLFlBQVk7SUFBQztJQUV0RSx3Q0FBd0M7SUFDeEMsTUFBTUMsUUFBZTtRQUFDO1lBQUVqQixNQUFNUztRQUFPO0tBQUU7SUFFdkMsZ0RBQWdEO0lBQ2hELElBQUlDLGNBQWNBLFdBQVdRLE1BQU0sR0FBRyxHQUFHO1FBQ3ZDLEtBQUssTUFBTUMsU0FBU1QsV0FBWTtZQUM5QixJQUFJO2dCQUNGLE1BQU1VLFdBQVcsTUFBTTdCLGdFQUFXLENBQUM0QixNQUFNRyxRQUFRO2dCQUNqRCxNQUFNQyxhQUFhSCxTQUFTSSxRQUFRLENBQUM7Z0JBQ3JDUCxNQUFNUSxJQUFJLENBQUM7b0JBQ1RDLGFBQWE7d0JBQ1hDLFdBQVdSLE1BQU1TLFFBQVE7d0JBQ3pCQyxNQUFNTjtvQkFDUjtnQkFDRjtZQUNGLEVBQUUsT0FBT08sR0FBRztnQkFDVkMsUUFBUUMsSUFBSSxDQUFDLENBQUMsMEJBQTBCLEVBQUViLE1BQU1HLFFBQVEsQ0FBQyxDQUFDLENBQUMsRUFBRVE7WUFDL0Q7UUFDRjtJQUNGO0lBRUEsTUFBTUcsU0FBUyxNQUFNbkIsTUFBTW9CLGVBQWUsQ0FBQztRQUN6Q0MsVUFBVTtZQUFDO2dCQUFFN0IsTUFBTTtnQkFBUVc7WUFBTTtTQUFFO0lBQ3JDO0lBQ0EsTUFBTWpCLE9BQU9pQyxPQUFPRyxRQUFRLENBQUNwQyxJQUFJO0lBQ2pDLE9BQU9BO0FBQ1Q7QUFFQSxTQUFTSyxXQUFXZ0MsQ0FBUztJQUMzQixPQUFPQSxJQUFJQSxDQUFDLENBQUMsRUFBRSxDQUFDQyxXQUFXLEtBQUtELEVBQUVsQyxLQUFLLENBQUMsS0FBS2tDO0FBQy9DO0FBRU8sU0FBU0UsWUFBWWpCLFFBQWdCO0lBQzFDLE1BQU1rQixRQUFRbEIsU0FBU21CLFdBQVc7SUFDbEMsSUFBSUQsTUFBTUUsUUFBUSxDQUFDLFNBQVMsT0FBTztJQUNuQyxJQUFJRixNQUFNRSxRQUFRLENBQUMsV0FBV0YsTUFBTUUsUUFBUSxDQUFDLFVBQVUsT0FBTztJQUM5RCxJQUFJRixNQUFNRSxRQUFRLENBQUMsU0FBUyxPQUFPO0lBQ25DLElBQUlGLE1BQU1FLFFBQVEsQ0FBQyxVQUFVLE9BQU87SUFDcEMsSUFBSUYsTUFBTUUsUUFBUSxDQUFDLFNBQVMsT0FBTztJQUNuQyxJQUFJRixNQUFNRSxRQUFRLENBQUMsVUFBVSxPQUFPO0lBQ3BDLElBQUlGLE1BQU1FLFFBQVEsQ0FBQyxTQUFTLE9BQU87SUFDbkMsT0FBTztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZG9jcy1jaGF0LW5leHQvLi9saWIvZ2VtaW5pLnRzP2I2MzUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgR29vZ2xlR2VuZXJhdGl2ZUFJIH0gZnJvbSBcIkBnb29nbGUvZ2VuZXJhdGl2ZS1haVwiO1xyXG5pbXBvcnQgeyBTWVNURU1fUFJPTVBULCBzZXR0aW5ncyB9IGZyb20gXCIuL3NldHRpbmdzXCI7XHJcbmltcG9ydCBmcyBmcm9tIFwibm9kZTpmcy9wcm9taXNlc1wiO1xyXG5pbXBvcnQgcGF0aCBmcm9tIFwibm9kZTpwYXRoXCI7XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRSYWdQcm9tcHQocXVlcnk6IHN0cmluZywgcmVsZXZhbnQ6IHsgdGV4dD86IHN0cmluZyB9W10sIGhpc3Rvcnk/OiB7IHJvbGU6IHN0cmluZzsgY29udGVudDogc3RyaW5nIH1bXSkge1xyXG4gIGNvbnN0IGNvbnRleHRzID0gcmVsZXZhbnQubWFwKChjLCBpKSA9PiBgW0NvbnRleHQgJHtpICsgMX1dOlxcbiR7Yy50ZXh0IHx8IFwiXCJ9XFxuYCkuam9pbihcIlxcblwiKTtcclxuICBjb25zdCBoaXN0ID0gKGhpc3RvcnkgfHwgW10pLnNsaWNlKC01KS5tYXAobSA9PiBgJHtjYXBpdGFsaXplKG0ucm9sZSl9OiAke20uY29udGVudH1gKS5qb2luKFwiXFxuXCIpO1xyXG4gIHJldHVybiBgJHtTWVNURU1fUFJPTVBUfVxyXG5cclxuRE9DVU1FTlQgQ09OVEVYVDpcclxuJHtjb250ZXh0c31cclxuXHJcbiR7aGlzdCA/IGBDT05WRVJTQVRJT04gSElTVE9SWTpcXG4ke2hpc3R9XFxuXFxuYCA6IFwiXCJ9VVNFUiBRVUVTVElPTjpcclxuJHtxdWVyeX1cclxuXHJcbkFOU1dFUjpgO1xyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2VuZXJhdGVXaXRoR2VtaW5pKFxyXG4gIHByb21wdDogc3RyaW5nLCBcclxuICBtZWRpYUZpbGVzPzogeyBmaWxlUGF0aDogc3RyaW5nOyBtaW1lVHlwZTogc3RyaW5nIH1bXVxyXG4pOiBQcm9taXNlPHN0cmluZz4ge1xyXG4gIGlmICghc2V0dGluZ3MuR0VNSU5JX0FQSV9LRVkpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcIkdFTUlOSV9BUElfS0VZIG5vdCBzZXRcIik7XHJcbiAgfVxyXG4gIGNvbnN0IGdlbmFpID0gbmV3IEdvb2dsZUdlbmVyYXRpdmVBSShzZXR0aW5ncy5HRU1JTklfQVBJX0tFWSk7XHJcbiAgY29uc3QgbW9kZWwgPSBnZW5haS5nZXRHZW5lcmF0aXZlTW9kZWwoeyBtb2RlbDogc2V0dGluZ3MuR0VNSU5JX01PREVMIH0pO1xyXG4gIFxyXG4gIC8vIEJ1aWxkIHBhcnRzIGFycmF5OiB0ZXh0ICsgbWVkaWEgZmlsZXNcclxuICBjb25zdCBwYXJ0czogYW55W10gPSBbeyB0ZXh0OiBwcm9tcHQgfV07XHJcbiAgXHJcbiAgLy8gQWRkIG1lZGlhIGZpbGVzIChpbWFnZXMvdmlkZW9zKSB0byB0aGUgcHJvbXB0XHJcbiAgaWYgKG1lZGlhRmlsZXMgJiYgbWVkaWFGaWxlcy5sZW5ndGggPiAwKSB7XHJcbiAgICBmb3IgKGNvbnN0IG1lZGlhIG9mIG1lZGlhRmlsZXMpIHtcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCBmaWxlRGF0YSA9IGF3YWl0IGZzLnJlYWRGaWxlKG1lZGlhLmZpbGVQYXRoKTtcclxuICAgICAgICBjb25zdCBiYXNlNjREYXRhID0gZmlsZURhdGEudG9TdHJpbmcoJ2Jhc2U2NCcpO1xyXG4gICAgICAgIHBhcnRzLnB1c2goe1xyXG4gICAgICAgICAgaW5saW5lX2RhdGE6IHtcclxuICAgICAgICAgICAgbWltZV90eXBlOiBtZWRpYS5taW1lVHlwZSxcclxuICAgICAgICAgICAgZGF0YTogYmFzZTY0RGF0YVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgY29uc29sZS53YXJuKGBGYWlsZWQgdG8gcmVhZCBtZWRpYSBmaWxlICR7bWVkaWEuZmlsZVBhdGh9OmAsIGUpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IG1vZGVsLmdlbmVyYXRlQ29udGVudCh7IFxyXG4gICAgY29udGVudHM6IFt7IHJvbGU6IFwidXNlclwiLCBwYXJ0cyB9XSBcclxuICB9KTtcclxuICBjb25zdCB0ZXh0ID0gcmVzdWx0LnJlc3BvbnNlLnRleHQoKTtcclxuICByZXR1cm4gdGV4dDtcclxufVxyXG5cclxuZnVuY3Rpb24gY2FwaXRhbGl6ZShzOiBzdHJpbmcpIHtcclxuICByZXR1cm4gcyA/IHNbMF0udG9VcHBlckNhc2UoKSArIHMuc2xpY2UoMSkgOiBzO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TWltZVR5cGUoZmlsZVBhdGg6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgY29uc3QgbG93ZXIgPSBmaWxlUGF0aC50b0xvd2VyQ2FzZSgpO1xyXG4gIGlmIChsb3dlci5lbmRzV2l0aCgnLnBuZycpKSByZXR1cm4gJ2ltYWdlL3BuZyc7XHJcbiAgaWYgKGxvd2VyLmVuZHNXaXRoKCcuanBnJykgfHwgbG93ZXIuZW5kc1dpdGgoJy5qcGVnJykpIHJldHVybiAnaW1hZ2UvanBlZyc7XHJcbiAgaWYgKGxvd2VyLmVuZHNXaXRoKCcuZ2lmJykpIHJldHVybiAnaW1hZ2UvZ2lmJztcclxuICBpZiAobG93ZXIuZW5kc1dpdGgoJy53ZWJwJykpIHJldHVybiAnaW1hZ2Uvd2VicCc7XHJcbiAgaWYgKGxvd2VyLmVuZHNXaXRoKCcubXA0JykpIHJldHVybiAndmlkZW8vbXA0JztcclxuICBpZiAobG93ZXIuZW5kc1dpdGgoJy53ZWJtJykpIHJldHVybiAndmlkZW8vd2VibSc7XHJcbiAgaWYgKGxvd2VyLmVuZHNXaXRoKCcubW92JykpIHJldHVybiAndmlkZW8vcXVpY2t0aW1lJztcclxuICByZXR1cm4gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSc7XHJcbn1cclxuXHJcbiJdLCJuYW1lcyI6WyJHb29nbGVHZW5lcmF0aXZlQUkiLCJTWVNURU1fUFJPTVBUIiwic2V0dGluZ3MiLCJmcyIsImJ1aWxkUmFnUHJvbXB0IiwicXVlcnkiLCJyZWxldmFudCIsImhpc3RvcnkiLCJjb250ZXh0cyIsIm1hcCIsImMiLCJpIiwidGV4dCIsImpvaW4iLCJoaXN0Iiwic2xpY2UiLCJtIiwiY2FwaXRhbGl6ZSIsInJvbGUiLCJjb250ZW50IiwiZ2VuZXJhdGVXaXRoR2VtaW5pIiwicHJvbXB0IiwibWVkaWFGaWxlcyIsIkdFTUlOSV9BUElfS0VZIiwiRXJyb3IiLCJnZW5haSIsIm1vZGVsIiwiZ2V0R2VuZXJhdGl2ZU1vZGVsIiwiR0VNSU5JX01PREVMIiwicGFydHMiLCJsZW5ndGgiLCJtZWRpYSIsImZpbGVEYXRhIiwicmVhZEZpbGUiLCJmaWxlUGF0aCIsImJhc2U2NERhdGEiLCJ0b1N0cmluZyIsInB1c2giLCJpbmxpbmVfZGF0YSIsIm1pbWVfdHlwZSIsIm1pbWVUeXBlIiwiZGF0YSIsImUiLCJjb25zb2xlIiwid2FybiIsInJlc3VsdCIsImdlbmVyYXRlQ29udGVudCIsImNvbnRlbnRzIiwicmVzcG9uc2UiLCJzIiwidG9VcHBlckNhc2UiLCJnZXRNaW1lVHlwZSIsImxvd2VyIiwidG9Mb3dlckNhc2UiLCJlbmRzV2l0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/gemini.ts\n");

/***/ }),

/***/ "(rsc)/./lib/settings.ts":
/*!*************************!*\
  !*** ./lib/settings.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SYSTEM_PROMPT: () => (/* binding */ SYSTEM_PROMPT),\n/* harmony export */   settings: () => (/* binding */ settings)\n/* harmony export */ });\nconst settings = {\n    GEMINI_API_KEY: process.env.GEMINI_API_KEY || \"\",\n    MAX_CHUNK_SIZE: Number(process.env.MAX_CHUNK_SIZE || 1000),\n    CHUNK_OVERLAP: Number(process.env.CHUNK_OVERLAP || 200),\n    MAX_FILE_SIZE_MB: Number(process.env.MAX_FILE_SIZE_MB || 50),\n    EMBEDDING_MODEL: process.env.EMBEDDING_MODEL || \"Xenova/all-MiniLM-L6-v2\",\n    GEMINI_MODEL: process.env.GEMINI_MODEL || \"gemini-2.0-flash-exp\",\n    TEMPERATURE: Number(process.env.TEMPERATURE || 0.7),\n    MAX_OUTPUT_TOKENS: Number(process.env.MAX_OUTPUT_TOKENS || 2048),\n    ENABLE_OCR: String(process.env.ENABLE_OCR || \"true\") === \"true\",\n    ENABLE_YOUTUBE: String(process.env.ENABLE_YOUTUBE || \"true\") === \"true\"\n};\nconst SYSTEM_PROMPT = `You are a helpful assistant that answers questions based ONLY on the provided document context.\r\nIf the answer cannot be found in the provided context, clearly state that the information is not available in the document.\r\nDo not make up information or use external knowledge. Always cite which part of the document you're referencing.`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvc2V0dGluZ3MudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFhTyxNQUFNQSxXQUFxQjtJQUNoQ0MsZ0JBQWdCQyxRQUFRQyxHQUFHLENBQUNGLGNBQWMsSUFBSTtJQUM5Q0csZ0JBQWdCQyxPQUFPSCxRQUFRQyxHQUFHLENBQUNDLGNBQWMsSUFBSTtJQUNyREUsZUFBZUQsT0FBT0gsUUFBUUMsR0FBRyxDQUFDRyxhQUFhLElBQUk7SUFDbkRDLGtCQUFrQkYsT0FBT0gsUUFBUUMsR0FBRyxDQUFDSSxnQkFBZ0IsSUFBSTtJQUN6REMsaUJBQWlCTixRQUFRQyxHQUFHLENBQUNLLGVBQWUsSUFBSTtJQUNoREMsY0FBY1AsUUFBUUMsR0FBRyxDQUFDTSxZQUFZLElBQUk7SUFDMUNDLGFBQWFMLE9BQU9ILFFBQVFDLEdBQUcsQ0FBQ08sV0FBVyxJQUFJO0lBQy9DQyxtQkFBbUJOLE9BQU9ILFFBQVFDLEdBQUcsQ0FBQ1EsaUJBQWlCLElBQUk7SUFDM0RDLFlBQVlDLE9BQU9YLFFBQVFDLEdBQUcsQ0FBQ1MsVUFBVSxJQUFJLFlBQVk7SUFDekRFLGdCQUFnQkQsT0FBT1gsUUFBUUMsR0FBRyxDQUFDVyxjQUFjLElBQUksWUFBWTtBQUNuRSxFQUFFO0FBRUssTUFBTUMsZ0JBQWdCLENBQUM7O2dIQUVrRixDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kb2NzLWNoYXQtbmV4dC8uL2xpYi9zZXR0aW5ncy50cz8xZDcyIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB0eXBlIFNldHRpbmdzID0ge1xyXG4gIEdFTUlOSV9BUElfS0VZOiBzdHJpbmc7XHJcbiAgTUFYX0NIVU5LX1NJWkU6IG51bWJlcjtcclxuICBDSFVOS19PVkVSTEFQOiBudW1iZXI7XHJcbiAgTUFYX0ZJTEVfU0laRV9NQjogbnVtYmVyO1xyXG4gIEVNQkVERElOR19NT0RFTDogc3RyaW5nO1xyXG4gIEdFTUlOSV9NT0RFTDogc3RyaW5nO1xyXG4gIFRFTVBFUkFUVVJFOiBudW1iZXI7XHJcbiAgTUFYX09VVFBVVF9UT0tFTlM6IG51bWJlcjtcclxuICBFTkFCTEVfT0NSOiBib29sZWFuO1xyXG4gIEVOQUJMRV9ZT1VUVUJFOiBib29sZWFuO1xyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IHNldHRpbmdzOiBTZXR0aW5ncyA9IHtcclxuICBHRU1JTklfQVBJX0tFWTogcHJvY2Vzcy5lbnYuR0VNSU5JX0FQSV9LRVkgfHwgXCJcIixcclxuICBNQVhfQ0hVTktfU0laRTogTnVtYmVyKHByb2Nlc3MuZW52Lk1BWF9DSFVOS19TSVpFIHx8IDEwMDApLFxyXG4gIENIVU5LX09WRVJMQVA6IE51bWJlcihwcm9jZXNzLmVudi5DSFVOS19PVkVSTEFQIHx8IDIwMCksXHJcbiAgTUFYX0ZJTEVfU0laRV9NQjogTnVtYmVyKHByb2Nlc3MuZW52Lk1BWF9GSUxFX1NJWkVfTUIgfHwgNTApLFxyXG4gIEVNQkVERElOR19NT0RFTDogcHJvY2Vzcy5lbnYuRU1CRURESU5HX01PREVMIHx8IFwiWGVub3ZhL2FsbC1NaW5pTE0tTDYtdjJcIixcclxuICBHRU1JTklfTU9ERUw6IHByb2Nlc3MuZW52LkdFTUlOSV9NT0RFTCB8fCBcImdlbWluaS0yLjAtZmxhc2gtZXhwXCIsXHJcbiAgVEVNUEVSQVRVUkU6IE51bWJlcihwcm9jZXNzLmVudi5URU1QRVJBVFVSRSB8fCAwLjcpLFxyXG4gIE1BWF9PVVRQVVRfVE9LRU5TOiBOdW1iZXIocHJvY2Vzcy5lbnYuTUFYX09VVFBVVF9UT0tFTlMgfHwgMjA0OCksXHJcbiAgRU5BQkxFX09DUjogU3RyaW5nKHByb2Nlc3MuZW52LkVOQUJMRV9PQ1IgfHwgXCJ0cnVlXCIpID09PSBcInRydWVcIixcclxuICBFTkFCTEVfWU9VVFVCRTogU3RyaW5nKHByb2Nlc3MuZW52LkVOQUJMRV9ZT1VUVUJFIHx8IFwidHJ1ZVwiKSA9PT0gXCJ0cnVlXCIsXHJcbn07XHJcblxyXG5leHBvcnQgY29uc3QgU1lTVEVNX1BST01QVCA9IGBZb3UgYXJlIGEgaGVscGZ1bCBhc3Npc3RhbnQgdGhhdCBhbnN3ZXJzIHF1ZXN0aW9ucyBiYXNlZCBPTkxZIG9uIHRoZSBwcm92aWRlZCBkb2N1bWVudCBjb250ZXh0LlxyXG5JZiB0aGUgYW5zd2VyIGNhbm5vdCBiZSBmb3VuZCBpbiB0aGUgcHJvdmlkZWQgY29udGV4dCwgY2xlYXJseSBzdGF0ZSB0aGF0IHRoZSBpbmZvcm1hdGlvbiBpcyBub3QgYXZhaWxhYmxlIGluIHRoZSBkb2N1bWVudC5cclxuRG8gbm90IG1ha2UgdXAgaW5mb3JtYXRpb24gb3IgdXNlIGV4dGVybmFsIGtub3dsZWRnZS4gQWx3YXlzIGNpdGUgd2hpY2ggcGFydCBvZiB0aGUgZG9jdW1lbnQgeW91J3JlIHJlZmVyZW5jaW5nLmA7XHJcblxyXG4iXSwibmFtZXMiOlsic2V0dGluZ3MiLCJHRU1JTklfQVBJX0tFWSIsInByb2Nlc3MiLCJlbnYiLCJNQVhfQ0hVTktfU0laRSIsIk51bWJlciIsIkNIVU5LX09WRVJMQVAiLCJNQVhfRklMRV9TSVpFX01CIiwiRU1CRURESU5HX01PREVMIiwiR0VNSU5JX01PREVMIiwiVEVNUEVSQVRVUkUiLCJNQVhfT1VUUFVUX1RPS0VOUyIsIkVOQUJMRV9PQ1IiLCJTdHJpbmciLCJFTkFCTEVfWU9VVFVCRSIsIlNZU1RFTV9QUk9NUFQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./lib/settings.ts\n");

/***/ }),

/***/ "(rsc)/./lib/textChunker.ts":
/*!****************************!*\
  !*** ./lib/textChunker.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TextChunker: () => (/* binding */ TextChunker)\n/* harmony export */ });\nclass TextChunker {\n    constructor(chunkSize = 1000, overlap = 200){\n        this.chunkSize = chunkSize;\n        this.overlap = overlap;\n    }\n    chunkBySentences(text, maxChunkSize) {\n        const limit = maxChunkSize ?? this.chunkSize;\n        const sentences = text.replace(/!/g, \".\").replace(/\\?/g, \".\").split(\".\").map((s)=>s.trim()).filter(Boolean);\n        const chunks = [];\n        let current = [];\n        let size = 0;\n        let id = 0;\n        for (const sentence of sentences){\n            const sentSize = sentence.split(/\\s+/).length;\n            if (size + sentSize > limit && current.length) {\n                chunks.push({\n                    id,\n                    text: current.join(\". \") + \".\",\n                    sentence_count: current.length,\n                    token_count: size\n                });\n                id += 1;\n                if (this.overlap > 0 && current.length > 1) {\n                    current = current.slice(-1);\n                    size = current[0].split(/\\s+/).length;\n                } else {\n                    current = [];\n                    size = 0;\n                }\n            }\n            current.push(sentence);\n            size += sentSize;\n        }\n        if (current.length) {\n            chunks.push({\n                id,\n                text: current.join(\". \") + \".\",\n                sentence_count: current.length,\n                token_count: size\n            });\n        }\n        return chunks;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdGV4dENodW5rZXIudHMiLCJtYXBwaW5ncyI6Ijs7OztBQVNPLE1BQU1BO0lBSVhDLFlBQVlDLFlBQW9CLElBQUksRUFBRUMsVUFBa0IsR0FBRyxDQUFFO1FBQzNELElBQUksQ0FBQ0QsU0FBUyxHQUFHQTtRQUNqQixJQUFJLENBQUNDLE9BQU8sR0FBR0E7SUFDakI7SUFFQUMsaUJBQWlCQyxJQUFZLEVBQUVDLFlBQXFCLEVBQVc7UUFDN0QsTUFBTUMsUUFBUUQsZ0JBQWdCLElBQUksQ0FBQ0osU0FBUztRQUM1QyxNQUFNTSxZQUFZSCxLQUFLSSxPQUFPLENBQUMsTUFBTSxLQUFLQSxPQUFPLENBQUMsT0FBTyxLQUFLQyxLQUFLLENBQUMsS0FBS0MsR0FBRyxDQUFDQyxDQUFBQSxJQUFLQSxFQUFFQyxJQUFJLElBQUlDLE1BQU0sQ0FBQ0M7UUFDbkcsTUFBTUMsU0FBa0IsRUFBRTtRQUMxQixJQUFJQyxVQUFvQixFQUFFO1FBQzFCLElBQUlDLE9BQU87UUFDWCxJQUFJQyxLQUFLO1FBRVQsS0FBSyxNQUFNQyxZQUFZWixVQUFXO1lBQ2hDLE1BQU1hLFdBQVdELFNBQVNWLEtBQUssQ0FBQyxPQUFPWSxNQUFNO1lBQzdDLElBQUlKLE9BQU9HLFdBQVdkLFNBQVNVLFFBQVFLLE1BQU0sRUFBRTtnQkFDN0NOLE9BQU9PLElBQUksQ0FBQztvQkFBRUo7b0JBQUlkLE1BQU1ZLFFBQVFPLElBQUksQ0FBQyxRQUFRO29CQUFLQyxnQkFBZ0JSLFFBQVFLLE1BQU07b0JBQUVJLGFBQWFSO2dCQUFLO2dCQUNwR0MsTUFBTTtnQkFDTixJQUFJLElBQUksQ0FBQ2hCLE9BQU8sR0FBRyxLQUFLYyxRQUFRSyxNQUFNLEdBQUcsR0FBRztvQkFDMUNMLFVBQVVBLFFBQVFVLEtBQUssQ0FBQyxDQUFDO29CQUN6QlQsT0FBT0QsT0FBTyxDQUFDLEVBQUUsQ0FBQ1AsS0FBSyxDQUFDLE9BQU9ZLE1BQU07Z0JBQ3ZDLE9BQU87b0JBQ0xMLFVBQVUsRUFBRTtvQkFDWkMsT0FBTztnQkFDVDtZQUNGO1lBQ0FELFFBQVFNLElBQUksQ0FBQ0g7WUFDYkYsUUFBUUc7UUFDVjtRQUNBLElBQUlKLFFBQVFLLE1BQU0sRUFBRTtZQUNsQk4sT0FBT08sSUFBSSxDQUFDO2dCQUFFSjtnQkFBSWQsTUFBTVksUUFBUU8sSUFBSSxDQUFDLFFBQVE7Z0JBQUtDLGdCQUFnQlIsUUFBUUssTUFBTTtnQkFBRUksYUFBYVI7WUFBSztRQUN0RztRQUNBLE9BQU9GO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2RvY3MtY2hhdC1uZXh0Ly4vbGliL3RleHRDaHVua2VyLnRzPzc4NDAiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgQ2h1bmsgPSB7XHJcbiAgaWQ6IG51bWJlcjtcclxuICB0ZXh0OiBzdHJpbmc7XHJcbiAgdG9rZW5fY291bnQ/OiBudW1iZXI7XHJcbiAgc2VudGVuY2VfY291bnQ/OiBudW1iZXI7XHJcbiAgc3RhcnRfcG9zPzogbnVtYmVyO1xyXG4gIGVuZF9wb3M/OiBudW1iZXI7XHJcbn07XHJcblxyXG5leHBvcnQgY2xhc3MgVGV4dENodW5rZXIge1xyXG4gIHByaXZhdGUgY2h1bmtTaXplOiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBvdmVybGFwOiBudW1iZXI7XHJcblxyXG4gIGNvbnN0cnVjdG9yKGNodW5rU2l6ZTogbnVtYmVyID0gMTAwMCwgb3ZlcmxhcDogbnVtYmVyID0gMjAwKSB7XHJcbiAgICB0aGlzLmNodW5rU2l6ZSA9IGNodW5rU2l6ZTtcclxuICAgIHRoaXMub3ZlcmxhcCA9IG92ZXJsYXA7XHJcbiAgfVxyXG5cclxuICBjaHVua0J5U2VudGVuY2VzKHRleHQ6IHN0cmluZywgbWF4Q2h1bmtTaXplPzogbnVtYmVyKTogQ2h1bmtbXSB7XHJcbiAgICBjb25zdCBsaW1pdCA9IG1heENodW5rU2l6ZSA/PyB0aGlzLmNodW5rU2l6ZTtcclxuICAgIGNvbnN0IHNlbnRlbmNlcyA9IHRleHQucmVwbGFjZSgvIS9nLCBcIi5cIikucmVwbGFjZSgvXFw/L2csIFwiLlwiKS5zcGxpdChcIi5cIikubWFwKHMgPT4gcy50cmltKCkpLmZpbHRlcihCb29sZWFuKTtcclxuICAgIGNvbnN0IGNodW5rczogQ2h1bmtbXSA9IFtdO1xyXG4gICAgbGV0IGN1cnJlbnQ6IHN0cmluZ1tdID0gW107XHJcbiAgICBsZXQgc2l6ZSA9IDA7XHJcbiAgICBsZXQgaWQgPSAwO1xyXG5cclxuICAgIGZvciAoY29uc3Qgc2VudGVuY2Ugb2Ygc2VudGVuY2VzKSB7XHJcbiAgICAgIGNvbnN0IHNlbnRTaXplID0gc2VudGVuY2Uuc3BsaXQoL1xccysvKS5sZW5ndGg7XHJcbiAgICAgIGlmIChzaXplICsgc2VudFNpemUgPiBsaW1pdCAmJiBjdXJyZW50Lmxlbmd0aCkge1xyXG4gICAgICAgIGNodW5rcy5wdXNoKHsgaWQsIHRleHQ6IGN1cnJlbnQuam9pbignLiAnKSArICcuJywgc2VudGVuY2VfY291bnQ6IGN1cnJlbnQubGVuZ3RoLCB0b2tlbl9jb3VudDogc2l6ZSB9KTtcclxuICAgICAgICBpZCArPSAxO1xyXG4gICAgICAgIGlmICh0aGlzLm92ZXJsYXAgPiAwICYmIGN1cnJlbnQubGVuZ3RoID4gMSkge1xyXG4gICAgICAgICAgY3VycmVudCA9IGN1cnJlbnQuc2xpY2UoLTEpO1xyXG4gICAgICAgICAgc2l6ZSA9IGN1cnJlbnRbMF0uc3BsaXQoL1xccysvKS5sZW5ndGg7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIGN1cnJlbnQgPSBbXTtcclxuICAgICAgICAgIHNpemUgPSAwO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICBjdXJyZW50LnB1c2goc2VudGVuY2UpO1xyXG4gICAgICBzaXplICs9IHNlbnRTaXplO1xyXG4gICAgfVxyXG4gICAgaWYgKGN1cnJlbnQubGVuZ3RoKSB7XHJcbiAgICAgIGNodW5rcy5wdXNoKHsgaWQsIHRleHQ6IGN1cnJlbnQuam9pbignLiAnKSArICcuJywgc2VudGVuY2VfY291bnQ6IGN1cnJlbnQubGVuZ3RoLCB0b2tlbl9jb3VudDogc2l6ZSB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBjaHVua3M7XHJcbiAgfVxyXG59XHJcblxyXG4iXSwibmFtZXMiOlsiVGV4dENodW5rZXIiLCJjb25zdHJ1Y3RvciIsImNodW5rU2l6ZSIsIm92ZXJsYXAiLCJjaHVua0J5U2VudGVuY2VzIiwidGV4dCIsIm1heENodW5rU2l6ZSIsImxpbWl0Iiwic2VudGVuY2VzIiwicmVwbGFjZSIsInNwbGl0IiwibWFwIiwicyIsInRyaW0iLCJmaWx0ZXIiLCJCb29sZWFuIiwiY2h1bmtzIiwiY3VycmVudCIsInNpemUiLCJpZCIsInNlbnRlbmNlIiwic2VudFNpemUiLCJsZW5ndGgiLCJwdXNoIiwiam9pbiIsInNlbnRlbmNlX2NvdW50IiwidG9rZW5fY291bnQiLCJzbGljZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/textChunker.ts\n");

/***/ }),

/***/ "(rsc)/./lib/vectorStore.ts":
/*!****************************!*\
  !*** ./lib/vectorStore.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStore: () => (/* binding */ VectorStore)\n/* harmony export */ });\n/* harmony import */ var _xenova_transformers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @xenova/transformers */ \"(rsc)/./node_modules/@xenova/transformers/src/transformers.js\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! better-sqlite3 */ \"better-sqlite3\");\n/* harmony import */ var better_sqlite3__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(better_sqlite3__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass VectorStore {\n    constructor(modelName, dbPath){\n        this.chunks = [];\n        this.embeddings = [];\n        this.embedderPromise = null;\n        this.db = null;\n        this.modelName = modelName;\n        this.useSqlite = Boolean(dbPath);\n        if (dbPath) {\n            this.db = new (better_sqlite3__WEBPACK_IMPORTED_MODULE_1___default())(dbPath);\n            this.initDb();\n            this.loadFromDb();\n        }\n    }\n    initDb() {\n        if (!this.db) return;\n        this.db.exec(`\r\n      CREATE TABLE IF NOT EXISTS chunks (\r\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\r\n        text TEXT NOT NULL\r\n      );\r\n      CREATE TABLE IF NOT EXISTS embeddings (\r\n        chunk_id INTEGER PRIMARY KEY,\r\n        vector BLOB NOT NULL,\r\n        FOREIGN KEY(chunk_id) REFERENCES chunks(id) ON DELETE CASCADE\r\n      );\r\n    `);\n    }\n    loadFromDb() {\n        if (!this.db) return;\n        const rows = this.db.prepare(\"SELECT c.id, c.text, e.vector FROM chunks c JOIN embeddings e ON e.chunk_id = c.id ORDER BY c.id\").all();\n        this.chunks = rows.map((r)=>({\n                id: r.id,\n                text: r.text\n            }));\n        this.embeddings = rows.map((r)=>new Float32Array(Buffer.from(r.vector).buffer));\n    }\n    async getEmbedder() {\n        if (!this.embedderPromise) {\n            const model = this.modelName.includes(\"/\") ? this.modelName : `Xenova/${this.modelName}`;\n            this.embedderPromise = (0,_xenova_transformers__WEBPACK_IMPORTED_MODULE_0__.pipeline)(\"feature-extraction\", model);\n        }\n        return this.embedderPromise;\n    }\n    async addDocuments(chunks) {\n        if (!chunks.length) return;\n        const embedder = await this.getEmbedder();\n        const texts = chunks.map((c)=>c.text);\n        const outputs = await embedder(texts, {\n            pooling: \"mean\",\n            normalize: true\n        });\n        const vectors = outputs.tolist().map((row)=>new Float32Array(row));\n        if (this.db) {\n            const insertChunk = this.db.prepare(\"INSERT INTO chunks (text) VALUES (?)\");\n            const insertEmbedding = this.db.prepare(\"INSERT INTO embeddings (chunk_id, vector) VALUES (?, ?)\");\n            const trx = this.db.transaction((pairs)=>{\n                for (const { text, vector } of pairs){\n                    const result = insertChunk.run(text);\n                    const chunkId = result.lastInsertRowid;\n                    insertEmbedding.run(chunkId, Buffer.from(vector.buffer));\n                }\n            });\n            const pairs = chunks.map((chunk, i)=>({\n                    text: chunk.text,\n                    vector: vectors[i]\n                }));\n            trx(pairs);\n            this.loadFromDb();\n        } else {\n            // For in-memory mode, assign IDs sequentially based on existing chunks\n            const startId = this.chunks.length > 0 ? Math.max(...this.chunks.map((c)=>c.id)) + 1 : 0;\n            const chunksWithIds = chunks.map((chunk, i)=>({\n                    ...chunk,\n                    id: startId + i\n                }));\n            this.chunks.push(...chunksWithIds);\n            this.embeddings.push(...vectors);\n        }\n    }\n    async search(query, topK = 5) {\n        if (this.chunks.length === 0) return [];\n        const embedder = await this.getEmbedder();\n        const out = await embedder(query, {\n            pooling: \"mean\",\n            normalize: true\n        });\n        const q = new Float32Array(out.tolist()[0]);\n        const scores = this.embeddings.map((v)=>cosineSimilarity(q, v));\n        const indices = scores.map((s, i)=>[\n                s,\n                i\n            ]).sort((a, b)=>b[0] - a[0]).slice(0, Math.min(topK, scores.length));\n        return indices.map(([score, i])=>({\n                chunk: this.chunks[i],\n                score\n            }));\n    }\n    clear() {\n        this.chunks = [];\n        this.embeddings = [];\n        if (this.db) {\n            this.db.exec(\"DELETE FROM embeddings; DELETE FROM chunks;\");\n        }\n    }\n    getStats() {\n        return {\n            total_chunks: this.chunks.length,\n            dimension: this.embeddings[0]?.length || 0,\n            model_name: this.modelName,\n            index_size: this.embeddings.length\n        };\n    }\n}\nfunction cosineSimilarity(a, b) {\n    let dot = 0;\n    let na = 0;\n    let nb = 0;\n    for(let i = 0; i < a.length && i < b.length; i++){\n        dot += a[i] * b[i];\n        na += a[i] * a[i];\n        nb += b[i] * b[i];\n    }\n    if (na === 0 || nb === 0) return 0;\n    return dot / (Math.sqrt(na) * Math.sqrt(nb));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/vectorStore.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@xenova","vendor-chunks/onnxruntime-web","vendor-chunks/@huggingface","vendor-chunks/onnxruntime-common","vendor-chunks/@google","vendor-chunks/remove-markdown"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fchat%2Froute&page=%2Fapi%2Fchat%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fchat%2Froute.ts&appDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5Ckomar%5CDesktop%5Cdocs-chat-master%5Cdocs-chat-master&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();